const express = require("express");
const app = express();
const db = require("./utils/db");

app.use(express.static("./public"));

//------------------------has to be above your routes, handles file uploads
var multer = require('multer');
var uidSafe = require('uid-safe');
var path = require('path');
const s3 = require('./s3');
const config = require('./config');

//-------- multer saves the file to uploads directory -------//
//filename function tells multer to use as the file name the unique id generated by the call to uidSafe with the extension of the original file name appended to it//

var diskStorage = multer.diskStorage({
    destination: function (req, file, callback) {
        callback(null, __dirname + '/uploads');
    },
    filename: function (req, file, callback) {
      uidSafe(24).then(function(uid) {
          callback(null, uid + path.extname(file.originalname));
      });
    }
});

var uploader = multer({
    storage: diskStorage,
    limits: {
        fileSize: 2097152
    }
});
//---------------------------- Part1 -------------------

    app.get('/images', function(req, res) {
        db.getImages().then(images => {
            // console.log("RESULTS:", images);
            res.json(images);
        }).catch(err => {
            console.log("error", err);
        });
    });

//------------------------------------------------------
//single indicates that we are only expecting one file. The string passed to single is the name of the field in the request.

    app.post('/upload', uploader.single('file'), s3.upload, (req, res) => {
    // console.log('req.file: ', req.file);

        const url = config.s3Url + req.file.filename;
        db.insertImages(url, req.body.username, req.body.title, req.body.description).then(result => {
            console.log("RETURN:", result);
            res.json(result.rows[0]);

        }).catch(err => {
            console.log("error", err);
        });


        // you're making db query to insert the image
    // If nothing went wrong the file is already in the uploads directory

});

app.get('/comment/:id', function(req, res) {
    // console.log(req.params);
    db.getImageById(req.params.id).then(results => {
        console.log("RESULTS:", results.rows);
        res.json(results.rows);
    }).catch(err => {
        console.log("error", err);
    });
});




//------------------------------
app.listen(8080, () => console.log("Listening!"));







//
// let cities = [
//         {
//             name: "Berlin",
//             country: "Germany"
//         },
//         {
//             name: "Tokyo",
//             country: "Japan"
//         },
//         {
//             name: "Tel Aviv",
//             country: "Israel"
//         }
//     ]; //closes cities


//
//     app.get('/cities', function(req, res) {
//         res.json(cities); //we send data to the client as json
//         // this then function will run wheever we get response from the server
//     });

//
