const express = require("express");
const app = express();
const db = require("./utils/db");
const bodyParser = require("body-parser");

app.use(express.static("./public"));

app.use(bodyParser.json());

//------------------------has to be above your routes, handles file uploads
var multer = require("multer");
var uidSafe = require("uid-safe");
var path = require("path");
const s3 = require("./s3");
const config = require("./config");

//-------- multer saves the file to uploads directory -------//
//filename function tells multer to use as the file name the unique id generated by the call to uidSafe with the extension of the original file name appended to it//

var diskStorage = multer.diskStorage({
    destination: function(req, file, callback) {
        callback(null, __dirname + "/uploads");
    },
    filename: function(req, file, callback) {
        uidSafe(24).then(function(uid) {
            callback(null, uid + path.extname(file.originalname));
        });
    }
});

var uploader = multer({
    storage: diskStorage,
    limits: {
        fileSize: 2097152
    }
});
//---------------------------- Part1 -------------------

app.get("/images", function(req, res) {
    db.getImages()
        .then(images => {
            // console.log("RESULTS:", images);
            res.json(images);
        })
        .catch(err => {
            console.log("error", err);
        });
});

//-------------------LOAD MORE IMAGES --------------------
app.get("/more/:lastId", function(req, res) {
    // console.log("req.params", req.params.lastId);
    db.getMoreImages(req.params.lastId).then(results => {
        res.json(results.rows);
    });
});

//--------------------------------------------------------
//single indicates that we are only expecting one file. The string passed to single is the name of the field in the request.

app.post("/upload", uploader.single("file"), s3.upload, (req, res) => {
    // console.log('req.file: ', req.file);

    const url = config.s3Url + req.file.filename;
    db.insertImages(
        url,
        req.body.username,
        req.body.title,
        req.body.description
    )
        .then(result => {
            // console.log("RETURN:", result);
            res.json(result.rows[0]);
        })
        .catch(err => {
            console.log("error", err);
        });

    // you're making db query to insert the image
    // If nothing went wrong the file is already in the uploads directory
});
//-------------------------- GET, POST: /comment/:id ----------------

app.get("/comment/:id", function(req, res) {
    db.getImageById(req.params.id).then(results => {
        const imagesInfo = results.rows;
        db.getAllComments(req.params.id).then(comments => {
            db.getPrevAndNextId(req.params.id)
                .then(prevAndNextId => {
                    res.json([imagesInfo, comments.rows, prevAndNextId]);
                })
                .catch(err => {
                    console.log("error", err);
                });
        });
    });
});

app.post("/comment/:id", function(req, res) {
    db.addComment(req.params.id, req.body.author, req.body.comment)
        .then(comments => {
            // console.log("New comment is added!!!");
            // console.log("LAST:", comments);
            res.json(comments.rows);
        })
        .catch(err => {
            console.log("error", err);
        });
});

// app.get("/next/:id", function(req, res) {
//     db.getNextImg(req.params.id)
//         .then(next => {
//             console.log("NEXT", next.rows);
//             res.json(next.rows);
//         })
//         .catch(err => {
//             console.log("error in get /next", err);
//         });
// });

//------------------------------
app.listen(8080, () => console.log("Listening!"));
